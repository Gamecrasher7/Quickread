<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Color Palette -->
    <Color x:Key="PrimaryColor">#FF1F1F1F</Color>
    <Color x:Key="SecondaryColor">#FF2A2A2A</Color>
    <Color x:Key="TertiaryColor">#FF3C3C3C</Color>
    <Color x:Key="AccentColor">#FF00AEEF</Color>
    <Color x:Key="AccentHoverColor">#FF0099CC</Color>
    <Color x:Key="AccentPressedColor">#FF007799</Color>
    <Color x:Key="TextColor">#FFFFFFFF</Color>
    <Color x:Key="TextSecondaryColor">#FFCCCCCC</Color>
    <Color x:Key="TextMutedColor">#FF999999</Color>
    <Color x:Key="BorderColor">#FF555555</Color>
    <Color x:Key="ErrorColor">#FFFF4444</Color>
    <Color x:Key="WarningColor">#FFFFAA00</Color>
    <Color x:Key="SuccessColor">#FF44FF44</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}" />
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}" />
    <SolidColorBrush x:Key="TertiaryBrush" Color="{StaticResource TertiaryColor}" />
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="AccentHoverBrush" Color="{StaticResource AccentHoverColor}" />
    <SolidColorBrush x:Key="AccentPressedBrush" Color="{StaticResource AccentPressedColor}" />
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}" />
    <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}" />
    <SolidColorBrush x:Key="TextMutedBrush" Color="{StaticResource TextMutedColor}" />
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}" />
    <SolidColorBrush x:Key="ErrorBrush" Color="{StaticResource ErrorColor}" />
    <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}" />
    <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}" />

    <!-- Typography -->
    <FontFamily x:Key="PrimaryFont">Segoe UI</FontFamily>
    <FontFamily x:Key="HeaderFont">Segoe UI Semibold</FontFamily>
    <FontFamily x:Key="MonospaceFont">Consolas</FontFamily>

    <!-- Standard Button Style -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="12,6" />
        <Setter Property="Margin" Value="4" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="MinWidth" Value="80" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            CornerRadius="6"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource AccentPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource BorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource TextMutedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Secondary Button Style -->
    <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!-- ComboBox Style -->
    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}" />
        <Setter Property="MinHeight" Value="32" />
    </Style>

    <!-- TextBox Style -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="SelectionBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="CaretBrush" Value="{StaticResource TextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ListBox Style -->
    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <!-- ListBoxItem Style -->
    <Style TargetType="ListBoxItem">
        <Setter Property="Padding" Value="8" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource TertiaryBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBlock Styles -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}" />
    </Style>

    <Style x:Key="HeaderTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontFamily" Value="{StaticResource HeaderFont}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="0,0,0,8" />
    </Style>

    <Style x:Key="SubHeaderTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
    </Style>

    <Style x:Key="MutedTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource TextMutedBrush}" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <!-- ScrollViewer Style -->
    <Style TargetType="ScrollViewer">
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <!-- ScrollBar Styles -->
    <Style TargetType="ScrollBar">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BorderBrush}" />
        <Setter Property="Width" Value="16" />
    </Style>

    <!-- Window Style -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}" />
    </Style>

    <!-- Border Style -->
    <Style TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <!-- Status Colors for specific use cases -->
    <Style x:Key="ErrorText" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource ErrorBrush}" />
    </Style>

    <Style x:Key="WarningText" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource WarningBrush}" />
    </Style>

    <Style x:Key="SuccessText" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{StaticResource SuccessBrush}" />
    </Style>

</ResourceDictionary>